
  name: Build
  on: 
    push:
      branches:
        - main
  jobs:
    deploy:
      runs-on: ubuntu-latest
      permissions:
        pages: write
        id-token: write
      env:
        LastArtiFact: onepisya-github-pages-1692564433922
        built: false
        INPUT_PATH: "/dist/"
      environment:
        name: onepisya-github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      # 缓存 
      steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
  
      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
            npm install -g pnpm
            pnpm install
      # ============ 脚本自动生成 ==============   
      - uses: tj-actions/changed-files@v35
        id: changed-2022-12-10
        # 文件修改检测
        with:
          files: |
            2022-12-10/src/*
      - name: Build 2022-12-10
        if: steps.changed-2022-12-10.outputs.any_changed == 'true'
        run: |
          pnpm -C 2022-12-10/src run build
          echo "built=true" >> $GITHUB_ENV
      - name: Debug
        run: |
          echo "any_changed: ${{ steps.changed-2022-12-10.outputs.any_changed }}"
        
   
      - uses: tj-actions/changed-files@v35
        id: changed-2023-05-17
        # 文件修改检测
        with:
          files: |
            2023-05-17/src/*
      - name: Build 2023-05-17
        if: steps.changed-2023-05-17.outputs.any_changed == 'true'
        run: |
          pnpm -C 2023-05-17/src run build
          echo "built=true" >> $GITHUB_ENV
      - name: Debug
        run: |
          echo "any_changed: ${{ steps.changed-2023-05-17.outputs.any_changed }}"
        
      # ============ 生成结束 ==============
      - name: Debug
        run: |
          echo "built: ${{env.built}}"

      - name: Tar Files # use upload-pages-artifact@v1 source code, i just need a linux
        shell: sh
        run: |
            if [ $GITHUB_ENV[built] == "true" ]; then
              # compress files
              chmod -c -R +rX "$INPUT_PATH" | while read line; do
                echo "::warning title=Invalid file permissions automatically fixed::$line"
              done
              tar                 --dereference --hard-dereference                 --directory "$INPUT_PATH"                 -cvf "$RUNNER_TEMP/artifact.tar"                 --exclude=.git                 --exclude=.github                 .
            else
              echo "Skipping compress file"
            fi  

      - name: Upload artifact
        if: ${{env.built}} == true
        id: upload
        uses: actions/upload-artifact@v3
        with:
          name: onepisya-github-pages-1692568179005
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 90
          if-no-files-found: error

      - name: Deploy to GitHub Pages
        if: ${{env.built}} == true
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: onepisya-github-pages-1692568179005
      - name: show messages
        run: |
          echo ${{ steps.deployment.outputs.page_url }}
  